<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oti.groupware.hr.dao.LeaveApplicationDAO">

    <resultMap id="leaveApplicationResultMap" type="leaveApplication">
        <result column="lev_app_id" property="levAppId"/>
        <result column="emp_id" property="empId"/>
        <result column="lev_app_date" property="levAppDate"/>
        <result column="lev_app_reason" property="levAppReason"/>
        <result column="lev_app_category" property="levAppCategory"/>
        <result column="lev_app_start_date" property="levAppStartDate"/>
        <result column="lev_app_end_date" property="levAppEndDate"/>
        <result column="lev_app_process_state" property="levAppProcessState"/>
        <result column="lev_app_process_date" property="levAppProcessDate"/>
        <result column="lev_app_approval_emp_name" property="levAppApprovalEmpName"/>
        <result column="lev_app_approval_emp_id" property="levAppApprovalEmpId"/>
        <result column="lev_app_opinion" property="levAppOpinion"/>
    </resultMap>
    
    <!-- 휴가신청서(일반 임직원) - 전체 행의 수 -->
	<select id="getLeaveApplicationRowsCount" resultType="int">
	    SELECT 
	      count(*)
	    FROM 
	      leave_applications
	    <where>
	      emp_id = #{empId}
	      <if test="(startDate != null and !startDate.equals('')) and (endDate != null and !endDate.equals(''))">
	      	AND lev_app_date BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM') AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM')
	      </if>
	    </where>
	</select>

    <!-- 휴가신청서(일반 임직원) - 페이징 목록 -->
	<select id="getLeaveApplicationList" resultMap="leaveApplicationResultMap">
		SELECT 
		    lev_app_id,
		    lev_app_date,
		    lev_app_category,
		    lev_app_start_date,
		    lev_app_end_date,
		    lev_app_approval_emp_name,
		    lev_app_process_state
		FROM leave_applications
		<where>
	      emp_id = #{empId}
	      <if test="(startDate != null and !startDate.equals('')) and (endDate != null and !endDate.equals(''))">
	      	AND lev_app_date BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM') AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM')
	      </if>
		</where>
		ORDER BY lev_app_date DESC
		OFFSET (#{pager.pageNo} - 1) * #{pager.rowsPerPage} ROWS
		FETCH NEXT #{pager.rowsPerPage} ROWS ONLY
	</select>

	<!-- 상세조회 -->
	<select id="getLeaveApplicationDetail" resultMap="leaveApplicationResultMap">
		SELECT 
		    lev_app_date,
		    lev_app_reason,
		    lev_app_category,
		    lev_app_start_date,
		    lev_app_end_date,
		    lev_app_approval_emp_name,
		    lev_app_process_state,
		    lev_app_opinion
		FROM 
			leave_applications
		WHERE
            lev_app_id = #{levAppId}
	</select>
	
	<!-- 근무신청서 통계 -->
<!-- 	<select id="getAttendanceExceptionStats" resultType="hashmap"> -->
<!-- 		SELECT -->
<!-- 		    count(CASE WHEN atd_excp_category = '근무시간수정' THEN 1 END) AS 근무시간수정, -->
<!-- 		    count(CASE WHEN atd_excp_category = '추가근무' THEN 1 END) AS 추가근무보고 -->
<!-- 		FROM  -->
<!-- 		    attendance_exceptions -->
<!-- 		WHERE -->
<!-- 		    emp_id = #{empId} -->
<!-- 	</select> -->
	
	<!-- 휴가신청서 등록 -->
    <insert id="insertLeaveApplication" parameterType="leaveApplication">
        INSERT INTO leave_applications (
        	lev_app_id, 
        	emp_id, 
        	lev_app_date, 
        	lev_app_reason, 
        	lev_app_category,
        	lev_app_start_date, 
        	lev_app_end_date, 
        	lev_app_process_state, 
        	lev_app_approval_emp_name
       	)
        VALUES (
        	SEQ_ATD_EXCP_ID.NEXTVAL, 
        	#{empId}, 
        	SYSDATE, 
        	#{levAppReason}, 
        	#{levAppCategory}, 
        	#{levAppStartDate},
        	#{levAppEndDate}, 
        	'미처리', 
        	#{levAppApprovalEmpName}
       	)
    </insert>
    
    <!-- 휴가신청결재서(부서장) - 전체 행의 수 -->
	<select id="getLeaveApplicationApprovalRowsCount" resultType="int">
	    SELECT 
	      count(*)
	    FROM 
	      leave_applications
	    <where>
	      lev_app_approval_emp_id = #{empId}
	      <if test="(startDate != null and !startDate.equals('')) and (endDate != null and !endDate.equals(''))">
	      	AND lev_app_date BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM') AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM')
	      </if>
	    </where>
	</select>

    <!-- 휴가신청결재서(부서장) - 페이징 목록 -->
	<select id="getLeaveApplicationApprovalList" resultMap="leaveApplicationResultMap">
		SELECT 
		    lev_app_id,
		    lev_app_date,
		    lev_app_category,
		    lev_app_start_date,
		    lev_app_end_date,
		    lev_app_approval_emp_name,
		    lev_app_process_state
		FROM leave_applications
		<where>
	      lev_app_approval_emp_id = #{empId}
	      <if test="(startDate != null and !startDate.equals('')) and (endDate != null and !endDate.equals(''))">
	      	AND lev_app_date BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM') AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM')
	      </if>
		</where>
		ORDER BY lev_app_date DESC
		OFFSET (#{pager.pageNo} - 1) * #{pager.rowsPerPage} ROWS
		FETCH NEXT #{pager.rowsPerPage} ROWS ONLY
	</select>
	
    <!-- 잔여일수 수정 -->
<!--     <update id="updateEmployeeReserve"> -->
<!--     	UPDATE  -->
<!--     		employees -->
<!--    		SET -->
   			
<!-- 		WHERE emp_id = #{empId} -->
<!--     </update> -->
    

    <update id="updateLeaveApplication" parameterType="leaveApplication">
        UPDATE project3.leave_applications
        SET lev_app_date = #{levAppDate}, lev_app_reason = #{levAppReason}, lev_app_category = #{levAppCategory},
        lev_app_start_date = #{levAppStartDate}, lev_app_end_date = #{levAppEndDate}, lev_app_process_state = #{levAppProcessState},
        lev_app_process_date = #{levAppProcessDate}, lev_app_approval_emp = #{levAppApprovalEmp}, lev_app_opinion = #{levAppOpinion}
        WHERE lev_app_id = #{levAppId} AND emp_id = #{empId}
    </update>

    <delete id="deleteLeaveApplication">
        DELETE FROM project3.leave_applications
        WHERE lev_app_id = #{levAppId} AND emp_id = #{empId}
    </delete>
    
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oti.groupware.hr.dao.AttendanceDAO">
	<!-- resultMap -->
	<resultMap id="attendanceResultMap" type="attendance">
		<result column="atd_id" property="atdId"/>
		<result column="emp_id" property="empId"/>
		<result column="atd_in_time" property="atdInTime"/>
		<result column="atd_out_time" property="atdOutTime"/>
		<result column="atd_state" property="atdState"/>
	</resultMap>
	
	<!-- 오늘 근무현황 -->
	<select id="getAttendanceToday" resultMap="attendanceResultMap">
		SELECT 
		  atd_id, 
		  emp_id, 
		  atd_in_time, 
		  atd_out_time, 
		  atd_state 
		FROM attendances 
		WHERE emp_id = #{empId} AND 
			  to_char(atd_in_time, 'yyyy-MM-DD') = to_char(sysdate, 'yyyy-MM-DD') 
	</select>
	
	<!-- 근무통계 -->
	<select id="countAttendanceState" resultType="hashmap">
		<![CDATA[
		SELECT
		    count(CASE WHEN atd_state = '정상출근' THEN 1 END) AS 정상출근,
		    count(CASE WHEN TO_CHAR(atd_in_time, 'HH24') >= 9 AND atd_state is null THEN 1 END) AS 지각,
		    count(CASE WHEN TO_CHAR(atd_out_time, 'HH24') < 18 AND atd_out_time is not null THEN 1 END) AS 조퇴,
		    count(CASE WHEN atd_state = '결근' THEN 1 END) AS 결근,
		    count(CASE WHEN atd_state = '추가근무' THEN 1 END) AS 추가근무
		FROM 
		    attendances
		WHERE
		    emp_id = #{empId}
		]]>
	</select>
	
	<!-- 근무현황목록 -->
	<select id="getAttendanceList" resultMap="attendanceResultMap">
		SELECT
		    emp_id, 
		    atd_in_time, 
		    atd_out_time,
		    atd_state
		FROM 
			attendances
		WHERE
			emp_id = #{empId}
	</select>
	
	<!-- 출근시간 등록 -->
	<insert id="insertAttendance">
		<selectKey keyProperty="atdId" resultType="int" order="BEFORE">
        	select seq_atd_id.nextval from dual
    	</selectKey>
		INSERT INTO attendances (
		  atd_id,
		  emp_id,
		  atd_in_time
		) VALUES (
		  #{atdId},
		  #{empId},
		  sysdate
		)
	</insert>
	
	<!-- 퇴근시간 등록 -->
	<update id="updateAttendance" parameterType="attendance">
		UPDATE 
			attendances
		SET
		  atd_out_time = sysdate
		WHERE emp_id = #{empId} AND 
			  to_char(atd_in_time, 'yyyy-MM-DD') = to_char(sysdate, 'yyyy-MM-DD')
	</update>
	
	<!-- 모든 임직원ID 목록(스케줄러) -->
	<select id="getEmployeeList" resultType="employee">
		SELECT 
		  emp_id as "empId"
		FROM employees 
	</select>
	
	<!-- 모든 임직원의 오늘 근무현황목록(스케줄러) -->
	<select id="getAttendanceNullList" resultMap="attendanceResultMap">
		SELECT 
		  emp_id, 
		  atd_in_time, 
		  atd_out_time, 
		  atd_state 
		FROM attendances 
		WHERE emp_id = #{empId} AND 
			  (atd_state is null OR atd_state = '')
	</select>
	
	<!-- 오늘 근무상태 변경(스케줄러) -->
	<update id="updateAttendanceState" parameterType="attendance">
		<if test="atdState == '정상출근'">
			UPDATE 
				attendances
			SET
				atd_state = #{atdState}
		  	WHERE
			  	emp_id = #{empId} AND 
	  			to_char(atd_in_time, 'yyyy-MM-DD') = to_char(sysdate, 'yyyy-MM-DD')
		</if>
		<if test="atdState == '결근'">
			UPDATE 
				attendances
			SET
				atd_state = #{atdState},
				atd_in_time = sysdate
		  	WHERE 
		  		emp_id = #{empId} AND 
		  	    (atd_in_time is null OR atd_in_time = '') AND
		  	    (atd_state is null OR atd_state = '')
		</if>
	</update>
</mapper>